from flask import Flask, render_template_string, request, redirect, flash, session
from flask_sqlalchemy import SQLAlchemy
from werkzeug.security import generate_password_hash, check_password_hash

app = Flask(__name__)
app.secret_key = "your_secret_key"

# Database Configuration
app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://username:password@localhost:5432/your_database_name'
db = SQLAlchemy(app)


class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(100), nullable=False)
    email = db.Column(db.String(255), unique=True, nullable=False)
    password = db.Column(db.String(255), nullable=False)


db.create_all()


@app.route("/", methods=["GET", "POST"])
def register():
    if request.method == "POST":
        username = request.form["username"]
        email = request.form["email"]
        password = generate_password_hash(request.form["password"])

        if User.query.filter_by(email=email).first():
            flash("❌ Email already registered!")
        else:
            new_user = User(username=username, email=email, password=password)
            db.session.add(new_user)
            db.session.commit()
            flash("✅ Registration successful! You can log in now.")

    return render_template_string(HTML_TEMPLATE)


@app.route("/dashboard")
def dashboard():
    if "username" not in session:
        return redirect("/")
    return render_template_string(DASHBOARD_TEMPLATE, username=session["username"])


@app.route("/logout")
def logout():
    session.pop("username", None)
    return redirect("/")


HTML_TEMPLATE = """
<!DOCTYPE html>
<html lang=\"en\">
<head>
    <meta charset=\"UTF-8\">
    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
    <title>Modern Registration</title>
    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">
    <script src=\"https://unpkg.com/leaflet/dist/leaflet.js\"></script>
    <style>
        body { background: linear-gradient(-45deg, #ff9a9e, #fad0c4, #fad0c4, #ffdde1); animation: gradientBG 10s ease infinite; height: 100vh; display: flex; justify-content: center; align-items: center; }
        @keyframes gradientBG { 0% { background-position: 0% 50%; } 50% { background-position: 100% 50%; } 100% { background-position: 0% 50%; } }
        .container { display: flex; width: 90%; max-width: 1000px; border-radius: 15px; overflow: hidden; box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.3); }
        .form-container { width: 50%; background: white; padding: 30px; }
        #map { width: 50%; height: 100%; }
    </style>
</head>
<body>
    <div class=\"container\">
        <div class=\"form-container\">
            <h2>Register</h2>
            {% with messages = get_flashed_messages() %}
              {% if messages %}
                {% for message in messages %}
                    <p class=\"text-danger\">{{ message }}</p>
                {% endfor %}
              {% endif %}
            {% endwith %}
            <form method=\"POST\">
                <input type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"Enter Username\" required>
                <input type=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Enter Email\" required>
                <input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Enter Password\" required>
                <button type=\"submit\" class=\"btn btn-primary mt-3 w-100\">Register</button>
            </form>
        </div>
        <div id=\"map\"></div>
    </div>
    <script>
        var map = L.map('map').setView([33.6844, 73.0479], 10);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);
        var marker = L.marker([33.6844, 73.0479]).addTo(map);
    </script>
</body>
</html>
"""

if __name__ == "__main__":
    app.run(debug=True)
